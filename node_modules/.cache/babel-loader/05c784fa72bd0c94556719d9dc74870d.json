{"ast":null,"code":"import _defineProperty from \"C:/Users/Cristian Antony/Desktop/Liz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/Cristian Antony/Desktop/Liz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Cristian Antony\\\\Desktop\\\\Liz\\\\src\\\\components\\\\Indicadores.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport { InputMask } from \"primereact/inputmask\";\nimport { InputText } from 'primereact/inputtext';\nimport { Calendar } from 'primereact/calendar';\nimport { DataTable } from 'primereact/datatable';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Column } from 'primereact/column';\nimport Swal from 'sweetalert2';\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputNumber } from 'primereact/inputnumber';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport IndicadoresService from '../service/IndicadoresService';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport { Skeleton } from 'primereact/skeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Indicadores = function Indicadores() {\n  _s();\n\n  var _useState = useState({\n    title: '',\n    text: '',\n    icon: '',\n    confirmButtonText: 'Aceptar',\n    timer: '3000'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      mensaje = _useState2[0],\n      setMensaje = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lstIndicadores = _useState4[0],\n      setLstIndicadores = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errores = _useState6[0],\n      setErrores = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dlgIndicadores = _useState8[0],\n      setDlgIndicadores = _useState8[1];\n\n  var _useState9 = useState({\n    idInd: null,\n    nombreInd: '',\n    unidad_medida: '',\n    categoria: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Indicadores = _useState10[0],\n      setIndicadores = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      txtCriterio = _useState12[0],\n      setTxtCriterio = _useState12[1];\n\n  var _useTranslation = useTranslation(['translation', 'Indicadores']),\n      t = _useTranslation.t;\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      captura = _useState14[0],\n      setCaptura = _useState14[1];\n\n  var indicadoresService = new IndicadoresService(); //MODIFICAR SERVICES\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedUM = _useState16[0],\n      setSelectedUM = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedCategoria = _useState18[0],\n      setSelectedCategoria = _useState18[1];\n\n  var unidad_med = [{\n    name: 'UnidadMedida1',\n    code: 'UM1'\n  }, {\n    name: 'UnidadMedida2',\n    code: 'UM2'\n  }, {\n    name: 'UnidadMedida3',\n    code: 'UM3'\n  }, {\n    name: 'UnidadMedida4',\n    code: 'UM4'\n  }, {\n    name: 'UnidadMedida5',\n    code: 'UM5'\n  }];\n  var categorias = [{\n    name: 'Categoria1',\n    code: 'C1'\n  }, {\n    name: 'Categoria2',\n    code: 'C2'\n  }, {\n    name: 'Categoria3',\n    code: 'C3'\n  }, {\n    name: 'Categoria4',\n    code: 'C4'\n  }, {\n    name: 'Categoria5',\n    code: 'C5'\n  }];\n\n  var onUnidadMedChange = function onUnidadMedChange(e) {\n    setSelectedUM(e.value);\n  };\n\n  var onCategoriaChange = function onCategoriaChange(e) {\n    setSelectedCategoria(e.value);\n  };\n\n  var indicadoresSuccess = function indicadoresSuccess(severidad, cabecero, detalle) {\n    var mensajeCopy = Object.assign({}, mensaje);\n    mensajeCopy['title'] = cabecero;\n    mensajeCopy['text'] = detalle;\n    mensajeCopy['icon'] = severidad;\n    setMensaje(mensajeCopy);\n    Swal.fire(mensajeCopy);\n  };\n\n  var obtenerIndicador = function obtenerIndicador() {\n    //MODIFICAR EN SERVICE\n    indicadoresService.obtenerIndicador(txtCriterio).then(function (data) {\n      return setLstIndicadores(data);\n    });\n  };\n\n  var seleccionaIndicador = function seleccionaIndicador(pIndicador) {\n    setCaptura(false);\n    formik.resetForm();\n    indicadoresService.seleccionaIndicador(pIndicador).then(function (data) {\n      return setIndicadores(data);\n    });\n    setDlgIndicadores(true);\n  };\n\n  useEffect(function () {\n    obtenerIndicador();\n  }, [txtCriterio]);\n\n  var agregaIndicador = function agregaIndicador() {\n    indicadoresService.agregaIndicador(Indicadores).then(function (data) {\n      setIndicadores(data);\n      indicadoresSuccess('success', t('Indicadores:cabecero.exito'), t('Indicadores:mensaje.agregar'));\n      setDlgIndicadores(false);\n      obtenerIndicador();\n    });\n  };\n\n  var eliminaIndicador = function eliminaIndicador() {\n    Indicadores.eliminaIndicador(Indicadores);\n    indicadoresSuccess('success', t('Inidcadores:cabecero.exito'), t('Indicadores:mensaje.eliminar'));\n    setDlgIndicadores(false);\n    obtenerIndicador();\n    obtenerIndicador();\n  };\n\n  var actualizaIndicador = function actualizaIndicador() {\n    indicadoresService.actualizaIndicador(Indicadores).then(function (data) {\n      setDlgIndicadores(false);\n      obtenerIndicador();\n    });\n  };\n\n  var updateProperty = function updateProperty(propiedad, valor) {\n    var indicadorCopy = Object.assign({}, Indicadores);\n    indicadorCopy[propiedad] = valor;\n    setIndicadores(indicadorCopy);\n  };\n\n  var iniciaIndicadores = function iniciaIndicadores() {\n    setCaptura(true);\n    iniciaComponentes();\n    setDlgIndicadores(true);\n  };\n\n  var iniciaComponentes = function iniciaComponentes() {\n    setIndicadores({\n      idInd: null,\n      nombreInd: '',\n      unidad_medida: '',\n      categoria: ''\n    });\n    formik.resetForm();\n  };\n  /**\r\n  * Validaci√≥n de las propiedades\r\n  *\r\n  */\n\n\n  var validate = function validate() {\n    var errors = {};\n\n    if (!Indicadores.nombreInd) {\n      errors.txtNombreInd = t('Indicadores:required.nombreInd');\n    }\n\n    return errors;\n  };\n\n  var formik = useFormik({\n    initialValues: {},\n    validate: validate,\n    onSubmit: function onSubmit() {\n      if (captura) {\n        agregaIndicador();\n      } else {\n        actualizaIndicador();\n      }\n    }\n  });\n\n  var fechaTemplate = function fechaTemplate(rowData, column) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Moment, {\n        format: t('formato.fechaHora'),\n        children: rowData.fechaAlta ? rowData.fechaAlta : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 4\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 1\n    }, _this);\n  };\n\n  var actionTemplate = function actionTemplate(rowData, column) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        icon: \"pi pi-search\",\n        className: \"p-button-rounded\",\n        onClick: function onClick() {\n          seleccionaIndicador(rowData);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        icon: \"pi pi-pencil\",\n        className: \"p-button-rounded\",\n        onClick: function onClick() {\n          seleccionaIndicador(rowData);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 137\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 1\n    }, _this);\n  };\n\n  var rightFooter = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-grid p-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-inputgroup\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          tooltip: t('Indicadores:boton.cancelar'),\n          icon: \"pi pi-ban\",\n          className: \"p-button-rounded\",\n          onClick: function onClick() {\n            return setDlgIndicadores(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 37\n        }, _this), !captura && /*#__PURE__*/_jsxDEV(Button, {\n          tooltip: t('Indicadores:boton.eliminar'),\n          icon: \"pi pi-times\",\n          className: \"p-button-rounded\",\n          onClick: eliminaIndicador\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 27\n        }, _this), !captura && /*#__PURE__*/_jsxDEV(Button, {\n          tooltip: t('Indicadores:boton.actualizar'),\n          icon: \"pi pi-undo\",\n          className: \"p-button-rounded\",\n          onClick: formik.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }, _this), captura && /*#__PURE__*/_jsxDEV(Button, {\n          tooltip: t('Indicadores:boton.agregar'),\n          icon: \"pi pi-check\",\n          className: \"p-button-rounded\",\n          onClick: formik.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 26\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 1\n  }, _this);\n\n  var dlgFooter = /*#__PURE__*/_jsxDEV(Toolbar, {\n    right: rightFooter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 1\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        i18nKey: \"Indicadores:entidad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12 p-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-inputgroup\",\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            placeholder: t('Indicadores:placeholder.nombreInd'),\n            value: txtCriterio,\n            onChange: function onChange(e) {\n              return setTxtCriterio(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            tooltip: t('Indicadores:boton.agregar'),\n            icon: \"pi pi-plus\",\n            onClick: iniciaIndicadores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 162\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 10\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: lstIndicadores,\n      paginator: true,\n      rows: 10,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"idInd\",\n        header: t('Indicadores:label.idInd'),\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"nombreInd\",\n        header: t('Indicadores:label.nombreInd'),\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"unidadMedida\",\n        header: t('Indicadores:label.unidadMedida'),\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"Categoria\",\n        header: t('Indicadores:label.categoria'),\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Column, {\n        body: actionTemplate,\n        header: t('Indicadores:rotulo.editar')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      header: t('Indicadores:rotulo.agregar'),\n      footer: dlgFooter,\n      visible: dlgIndicadores,\n      modal: true,\n      style: {\n        width: '50vw'\n      },\n      onHide: function onHide(e) {\n        return setDlgIndicadores(false);\n      },\n      blockScroll: false,\n      children: Indicadores && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-fluid p-formgrid p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field p-col-12 p-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"txtNombreInd\",\n              children: t('Indicadores:label.nombreInd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 54\n            }, _this), {\n              captura: captura\n            } ? /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"txtNombreInd\",\n              placeholder: t('Indicadores:placeholder.nombreInd'),\n              value: Indicadores.nombreInd,\n              className: formik.errors.txtNombreInd ? 'p-invalid' : 'p-inputtext',\n              maxLength: 45,\n              onChange: function onChange(e) {\n                return updateProperty('nombreInd', e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 16\n            }, _this) : /*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"txtNombreInd\",\n              children: \"indicadores.nombreInd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 24\n            }, _this), formik.errors.txtNombreInd && /*#__PURE__*/_jsxDEV(\"small\", {\n              id: \"txtNombreInd-help\",\n              className: \"p-invalid\",\n              children: formik.errors.txtNombreInd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 49\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field p-col-12 p-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"txtUniMed\",\n              children: t('Indicadores:label.unidadMedida')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 54\n            }, _this), {\n              captura: captura\n            } ? /*#__PURE__*/_jsxDEV(Dropdown, _defineProperty({\n              value: selectedUM,\n              options: unidad_med,\n              onChange: onUnidadMedChange,\n              optionLabel: \"name\",\n              placeholder: t('Indicadores:placeholder.unidadMedida')\n            }, \"onChange\", function onChange(e) {\n              return updateProperty('unidadMedida', e.target.value);\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, _this) : /*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"txtUniMed\",\n              children: \"indicadores.unidad_med\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 24\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field p-col-12 p-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"txtIndCateg\",\n              children: t('Indicadores:label.categoria')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 55\n            }, _this), {\n              captura: captura\n            } ? /*#__PURE__*/_jsxDEV(Dropdown, _defineProperty({\n              value: selectedCategoria,\n              options: categorias,\n              onChange: onCategoriaChange,\n              optionLabel: \"name\",\n              placeholder: t('Indicadores:placeholder.categoria')\n            }, \"onChange\", function onChange(e) {\n              return updateProperty('categoria', e.target.value);\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, _this) : /*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"txtIndCateg\",\n              children: \"indicadores.categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 27\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 10\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 1\n  }, _this);\n};\n\n_s(Indicadores, \"Bw1IAK5W5Y0zRYDY+nHZXOOXgPU=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = Indicadores;\nexport default Indicadores;\n\nvar _c;\n\n$RefreshReg$(_c, \"Indicadores\");","map":{"version":3,"sources":["C:/Users/Cristian Antony/Desktop/Liz/src/components/Indicadores.js"],"names":["React","useEffect","useState","useRef","Dialog","Button","InputMask","InputText","Calendar","DataTable","Toolbar","Column","Swal","ToggleButton","Dropdown","InputNumber","Moment","IndicadoresService","useTranslation","Trans","useFormik","Skeleton","Indicadores","title","text","icon","confirmButtonText","timer","mensaje","setMensaje","lstIndicadores","setLstIndicadores","errores","setErrores","dlgIndicadores","setDlgIndicadores","idInd","nombreInd","unidad_medida","categoria","setIndicadores","txtCriterio","setTxtCriterio","t","captura","setCaptura","indicadoresService","selectedUM","setSelectedUM","selectedCategoria","setSelectedCategoria","unidad_med","name","code","categorias","onUnidadMedChange","e","value","onCategoriaChange","indicadoresSuccess","severidad","cabecero","detalle","mensajeCopy","Object","assign","fire","obtenerIndicador","then","data","seleccionaIndicador","pIndicador","formik","resetForm","agregaIndicador","eliminaIndicador","actualizaIndicador","updateProperty","propiedad","valor","indicadorCopy","iniciaIndicadores","iniciaComponentes","validate","errors","txtNombreInd","initialValues","onSubmit","fechaTemplate","rowData","column","fechaAlta","actionTemplate","rightFooter","handleSubmit","dlgFooter","target","width"],"mappings":"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","sourcesContent":["\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport IndicadoresService from '../service/IndicadoresService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Indicadores = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstIndicadores, setLstIndicadores] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgIndicadores, setDlgIndicadores] = useState(false);\r\nconst [Indicadores, setIndicadores] = useState({idInd:null\r\n,nombreInd:''\r\n,unidad_medida:''\r\n,categoria:''\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Indicadores']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst indicadoresService = new IndicadoresService(); //MODIFICAR SERVICES\r\nconst [selectedUM, setSelectedUM] = useState(null);\r\nconst [selectedCategoria, setSelectedCategoria] = useState(null);\r\nconst unidad_med = [\r\n   { name: 'UnidadMedida1', code: 'UM1' },\r\n   { name: 'UnidadMedida2', code: 'UM2' },\r\n   { name: 'UnidadMedida3', code: 'UM3' },\r\n   { name: 'UnidadMedida4', code: 'UM4' },\r\n   { name: 'UnidadMedida5', code: 'UM5' }\r\n];\r\nconst categorias = [\r\n   { name: 'Categoria1', code: 'C1' },\r\n   { name: 'Categoria2', code: 'C2' },\r\n   { name: 'Categoria3', code: 'C3' },\r\n   { name: 'Categoria4', code: 'C4' },\r\n   { name: 'Categoria5', code: 'C5' }\r\n];\r\nconst onUnidadMedChange = (e) => {\r\n   setSelectedUM(e.value);\r\n}\r\nconst onCategoriaChange = (e) => {\r\n   setSelectedCategoria(e.value);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst indicadoresSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n\r\nconst obtenerIndicador = ()   =>   { //MODIFICAR EN SERVICE\r\nindicadoresService.obtenerIndicador (txtCriterio).then(data => setLstIndicadores(data));\r\n};\r\n\r\nconst seleccionaIndicador = (pIndicador)   =>   {\r\nsetCaptura(false);\r\nformik.resetForm();\r\nindicadoresService.seleccionaIndicador (pIndicador).then(data => setIndicadores(data));\r\nsetDlgIndicadores(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerIndicador();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaIndicador = ()   =>   {\r\nindicadoresService.agregaIndicador (Indicadores).\r\nthen(data => {setIndicadores(data);\r\nindicadoresSuccess('success',t('Indicadores:cabecero.exito'),t('Indicadores:mensaje.agregar'));\r\nsetDlgIndicadores(false);\r\nobtenerIndicador ();\r\n});\r\n};\r\n\r\nconst eliminaIndicador = ()   =>   {\r\nIndicadores.eliminaIndicador (Indicadores);\r\nindicadoresSuccess('success',t('Inidcadores:cabecero.exito'),t('Indicadores:mensaje.eliminar'));\r\nsetDlgIndicadores(false);\r\nobtenerIndicador();\r\nobtenerIndicador();\r\n};\r\n\r\nconst actualizaIndicador = ()   =>   {\r\nindicadoresService.actualizaIndicador (Indicadores).\r\nthen(data => { setDlgIndicadores(false); obtenerIndicador();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet indicadorCopy = Object.assign({}, Indicadores);\r\nindicadorCopy[propiedad] = valor;\r\nsetIndicadores(indicadorCopy);\r\n};\r\n\r\nconst iniciaIndicadores = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgIndicadores(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetIndicadores({idInd:null\r\n   ,nombreInd:''\r\n   ,unidad_medida:''\r\n   ,categoria:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validaci√≥n de las propiedades\r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Indicadores.nombreInd) {\r\nerrors.txtNombreInd= t('Indicadores:required.nombreInd');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaIndicador();\r\n} else{\r\nactualizaIndicador();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div><Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-rounded\" onClick={()  =>  {seleccionaIndicador(rowData);} }></Button><Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaIndicador(rowData); } }></Button></div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Indicadores:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgIndicadores(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Indicadores:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaIndicador }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Indicadores:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Indicadores:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Indicadores:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Indicadores:placeholder.nombreInd')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Indicadores:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaIndicadores}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstIndicadores} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"idInd\" header={t('Indicadores:label.idInd')} sortable={true}></Column>\r\n      <Column field=\"nombreInd\" header={t('Indicadores:label.nombreInd')} sortable={true}></Column>\r\n      <Column field=\"unidadMedida\" header={t('Indicadores:label.unidadMedida')} sortable={true}></Column>\r\n      <Column field=\"Categoria\" header={t('Indicadores:label.categoria')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Indicadores:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Indicadores:rotulo.agregar')} footer={dlgFooter} visible={dlgIndicadores} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgIndicadores(false)} blockScroll={false}>\r\n      { Indicadores  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtNombreInd\">\r\n                  {t('Indicadores:label.nombreInd')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtNombreInd\" placeholder={t('Indicadores:placeholder.nombreInd')} value={Indicadores.nombreInd} className={formik.errors.txtNombreInd ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombreInd', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtNombreInd\">indicadores.nombreInd</label>)}\r\n               \r\n               {formik.errors.txtNombreInd  &&  <small id=\"txtNombreInd-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtNombreInd}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtUniMed\">\r\n                  {t('Indicadores:label.unidadMedida')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <Dropdown value={selectedUM} options={unidad_med} onChange={onUnidadMedChange} optionLabel=\"name\" placeholder={t('Indicadores:placeholder.unidadMedida')} onChange={(e) =>   updateProperty('unidadMedida', e.target.value)}/>\r\n               ):(     <label id=\"txtUniMed\">indicadores.unidad_med</label>)}\r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtIndCateg\">\r\n                  {t('Indicadores:label.categoria')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <Dropdown value={selectedCategoria} options={categorias} onChange={onCategoriaChange} optionLabel=\"name\" placeholder={t('Indicadores:placeholder.categoria')} onChange={(e) =>   updateProperty('categoria', e.target.value)} />               \r\n                  ):(     <label id=\"txtIndCateg\">indicadores.categoria</label>)}\r\n               \r\n            </div>            \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Indicadores;                                        \t\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}