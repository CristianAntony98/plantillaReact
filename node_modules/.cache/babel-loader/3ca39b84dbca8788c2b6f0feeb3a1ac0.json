{"ast":null,"code":"import _slicedToArray from \"C:/Users/Cristian Antony/Desktop/Liz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Cristian Antony\\\\Desktop\\\\Liz\\\\src\\\\components\\\\Ram.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport { InputMask } from \"primereact/inputmask\";\nimport { InputText } from 'primereact/inputtext';\nimport { Calendar } from 'primereact/calendar';\nimport { DataTable } from 'primereact/datatable';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Column } from 'primereact/column';\nimport Swal from 'sweetalert2';\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport RamService from '../service/RamService';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport { Skeleton } from 'primereact/skeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Ram = function Ram() {\n  _s();\n\n  var _useState = useState({\n    title: '',\n    text: '',\n    icon: '',\n    confirmButtonText: 'Aceptar',\n    timer: '3000'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      mensaje = _useState2[0],\n      setMensaje = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lstRam = _useState4[0],\n      setLstRam = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errores = _useState6[0],\n      setErrores = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dlgRam = _useState8[0],\n      setDlgRam = _useState8[1];\n\n  var _useState9 = useState({\n    idRam: null,\n    tipoRam: '',\n    capacidadRam: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Ram = _useState10[0],\n      setRam = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      txtCriterio = _useState12[0],\n      setTxtCriterio = _useState12[1];\n\n  var _useTranslation = useTranslation(['translation', 'Ram']),\n      t = _useTranslation.t;\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      captura = _useState14[0],\n      setCaptura = _useState14[1];\n\n  var ramService = new RamService(); //MODIFICAR SERVICES\n\n  var ramSuccess = function ramSuccess(severidad, cabecero, detalle) {\n    var mensajeCopy = Object.assign({}, mensaje);\n    mensajeCopy['title'] = cabecero;\n    mensajeCopy['text'] = detalle;\n    mensajeCopy['icon'] = severidad;\n    setMensaje(mensajeCopy);\n    Swal.fire(mensajeCopy);\n  };\n\n  var obtenerRam = function obtenerRam() {\n    //MODIFICAR EN SERVICE\n    ramService.obtenerRam(txtCriterio).then(function (data) {\n      return setLstRam(data);\n    });\n  };\n\n  var seleccionaRam = function seleccionaRam(pRam) {\n    setCaptura(false);\n    formik.resetForm();\n    ramService.seleccionaRam(pRam).then(function (data) {\n      return setRam(data);\n    });\n    setDlgRam(true);\n  };\n\n  useEffect(function () {\n    obtenerRam();\n  }, [txtCriterio]);\n\n  var agregaRam = function agregaRam() {\n    ramService.agregaRam(Ram).then(function (data) {\n      setRam(data);\n      ramSuccess('success', t('Ram:cabecero.exito'), t('Ram:mensaje.agregar'));\n      setDlgRam(false);\n      obtenerRam();\n    });\n  };\n\n  var eliminaRam = function eliminaRam() {\n    Ram.eliminaRam(Ram);\n    ramSuccess('success', t('Ram:cabecero.exito'), t('Ram:mensaje.eliminar'));\n    setDlgRam(false);\n    obtenerRam();\n    obtenerRam();\n  };\n\n  var actualizaRam = function actualizaRam() {\n    ramService.actualizaRam(Ram).then(function (data) {\n      setDlgRam(false);\n      obtenerRam();\n    });\n  };\n\n  var updateProperty = function updateProperty(propiedad, valor) {\n    var ramCopy = Object.assign({}, Ram);\n    ramCopy[propiedad] = valor;\n    setRam(ramCopy);\n  };\n\n  var iniciaRam = function iniciaRam() {\n    setCaptura(true);\n    iniciaComponentes();\n    setDlgRam(true);\n  };\n\n  var iniciaComponentes = function iniciaComponentes() {\n    setRam({\n      idRam: null,\n      tipoRam: '',\n      capacidadRam: ''\n    });\n    formik.resetForm();\n  };\n  /**\r\n  * Validaci√≥n de las propiedades \r\n  *\r\n  */\n\n\n  var validate = function validate() {\n    var errors = {};\n\n    if (!Ram.tipoRam) {\n      errors.txtTipoRam = t('Ram:required.tipoRam');\n    }\n\n    return errors;\n  };\n\n  var formik = useFormik({\n    initialValues: {},\n    validate: validate,\n    onSubmit: function onSubmit() {\n      if (captura) {\n        agregaRam();\n      } else {\n        actualizaRam();\n      }\n    }\n  });\n\n  var fechaTemplate = function fechaTemplate(rowData, column) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Moment, {\n        format: t('formato.fechaHora'),\n        children: rowData.fechaAlta ? rowData.fechaAlta : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 8\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var actionTemplate = function actionTemplate(rowData, column) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        icon: \"pi pi-search\",\n        className: \"p-button-rounded\",\n        onClick: function onClick() {\n          seleccionaRam(rowData);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 10\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        icon: \"pi pi-pencil\",\n        className: \"p-button-rounded\",\n        onClick: function onClick() {\n          seleccionaRam(rowData);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 135\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var rightFooter = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-grid p-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-inputgroup\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          tooltip: t('Ram:boton.cancelar'),\n          icon: \"pi pi-ban\",\n          className: \"p-button-rounded\",\n          onClick: function onClick() {\n            return setDlgRam(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 41\n        }, _this), !captura && /*#__PURE__*/_jsxDEV(Button, {\n          tooltip: t('Ram:boton.eliminar'),\n          icon: \"pi pi-times\",\n          className: \"p-button-rounded\",\n          onClick: eliminaRam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 31\n        }, _this), !captura && /*#__PURE__*/_jsxDEV(Button, {\n          tooltip: t('Ram:boton.actualizar'),\n          icon: \"pi pi-undo\",\n          className: \"p-button-rounded\",\n          onClick: formik.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }, _this), captura && /*#__PURE__*/_jsxDEV(Button, {\n          tooltip: t('Ram:boton.agregar'),\n          icon: \"pi pi-check\",\n          className: \"p-button-rounded\",\n          onClick: formik.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 30\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 8\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, _this);\n\n  var dlgFooter = /*#__PURE__*/_jsxDEV(Toolbar, {\n    right: rightFooter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        i18nKey: \"Ram:entidad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 8\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12 p-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-inputgroup\",\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            placeholder: t('Ram:placeholder.tipoRam'),\n            value: txtCriterio,\n            onChange: function onChange(e) {\n              return setTxtCriterio(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            tooltip: t('Ram:boton.agregar'),\n            icon: \"pi pi-plus\",\n            onClick: iniciaRam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 156\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 14\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 8\n    }, _this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: lstRam,\n      paginator: true,\n      rows: 10,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"idRam\",\n        header: t('Ram:label.idRam'),\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"tipoRam\",\n        header: t('Ram:label.tipoRam'),\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"capacidadRam\",\n        header: t('Ram:label.capacidadRam'),\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Column, {\n        body: actionTemplate,\n        header: t('Ram:rotulo.editar')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 8\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      header: t('Ram:rotulo.agregar'),\n      footer: dlgFooter,\n      visible: dlgRam,\n      modal: true,\n      style: {\n        width: '50vw'\n      },\n      onHide: function onHide(e) {\n        return setDlgRam(false);\n      },\n      blockScroll: false,\n      children: Ram && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-fluid p-formgrid p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field p-col-12 p-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"txtTipoRam\",\n              children: t('Ram:label.tipoRam')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 59\n            }, _this), {\n              captura: captura\n            } ? /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"txtTipoRam\",\n              placeholder: t('Ram:placeholder.tipoRam'),\n              value: Ram.tipoRam,\n              className: formik.errors.txtTipoRam ? 'p-invalid' : 'p-inputtext',\n              maxLength: 45,\n              onChange: function onChange(e) {\n                return updateProperty('tipoRam', e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 20\n            }, _this) : /*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"txtTipoRam\",\n              children: \"ram.tipoRam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 28\n            }, _this), formik.errors.txtTipoRam && /*#__PURE__*/_jsxDEV(\"small\", {\n              id: \"txtTipoRam-help\",\n              className: \"p-invalid\",\n              children: formik.errors.txtTipoRam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 50\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field p-col-12 p-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"txtCapacidadRam\",\n              children: t('Ram:label.capacidadRam')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 59\n            }, _this), {\n              captura: captura\n            } ? /*#__PURE__*/_jsxDEV(InputNumber, {\n              id: \"txtCapacidadRam\",\n              placeholer: t('Ram:placeholder.capacidadRam'),\n              value: Ram.capacidadRam,\n              className: formik.errors.txtCapacidadRam ? 'p-invalid' : 'p-inputtext'\n              /*onChange={(e) =>   updateProperty('capacidadDisco', e.target.value)}*/\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 20\n            }, _this) : /*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"txtCapacidadRam\",\n              children: \"ram.capacidadRam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 28\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 14\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 8\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Ram, \"KnofBkvMKJBH2cVT0agRKh4jDqg=\", false, function () {\n  return [useTranslation, useFormik];\n});\n\n_c = Ram;\nexport default Ram;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ram\");","map":{"version":3,"sources":["C:/Users/Cristian Antony/Desktop/Liz/src/components/Ram.js"],"names":["React","useEffect","useState","useRef","Dialog","Button","InputMask","InputText","Calendar","DataTable","Toolbar","Column","Swal","ToggleButton","Dropdown","InputNumber","InputTextarea","Moment","RamService","useTranslation","Trans","useFormik","Skeleton","Ram","title","text","icon","confirmButtonText","timer","mensaje","setMensaje","lstRam","setLstRam","errores","setErrores","dlgRam","setDlgRam","idRam","tipoRam","capacidadRam","setRam","txtCriterio","setTxtCriterio","t","captura","setCaptura","ramService","ramSuccess","severidad","cabecero","detalle","mensajeCopy","Object","assign","fire","obtenerRam","then","data","seleccionaRam","pRam","formik","resetForm","agregaRam","eliminaRam","actualizaRam","updateProperty","propiedad","valor","ramCopy","iniciaRam","iniciaComponentes","validate","errors","txtTipoRam","initialValues","onSubmit","fechaTemplate","rowData","column","fechaAlta","actionTemplate","rightFooter","handleSubmit","dlgFooter","e","target","value","width","txtCapacidadRam"],"mappings":"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","sourcesContent":["\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport RamService from '../service/RamService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\nconst Ram = ()   =>   {\r\n    const  [mensaje, setMensaje] = useState({\r\n    title: '',\r\n    text: '',\r\n    icon: '',\r\n    confirmButtonText: 'Aceptar',\r\n    timer: '3000'\r\n    });\r\n    \r\n    \r\n    const [lstRam, setLstRam] = useState([]);\r\n    const [errores, setErrores] = useState([]);\r\n    const [dlgRam, setDlgRam] = useState(false);\r\n    const [Ram, setRam] = useState({idRam:null\r\n    ,tipoRam:''\r\n    ,capacidadRam:''\r\n    \r\n    });\r\n    \r\n    const [txtCriterio, setTxtCriterio] = useState('');\r\n    const { t } = useTranslation(['translation','Ram']);\r\n    const [captura, setCaptura] = useState(false);\r\n    const ramService = new RamService(); //MODIFICAR SERVICES\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const ramSuccess = (severidad,cabecero,detalle)   =>   {\r\n    let mensajeCopy = Object.assign({}, mensaje);\r\n    mensajeCopy['title'] = cabecero;\r\n    mensajeCopy['text'] = detalle;\r\n    mensajeCopy['icon'] = severidad;\r\n    setMensaje(mensajeCopy);\r\n    Swal.fire(mensajeCopy);\r\n    }\r\n    \r\n   \r\n \r\n    \r\n    const obtenerRam = ()   =>   { //MODIFICAR EN SERVICE\r\n    ramService.obtenerRam (txtCriterio).then(data => setLstRam(data));\r\n    };\r\n    \r\n    const seleccionaRam = (pRam)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    ramService.seleccionaRam (pRam).then(data => setRam(data));\r\n    setDlgRam(true);\r\n    };\r\n    \r\n    useEffect(()   =>   {\r\n    obtenerRam();\r\n    },  [txtCriterio]);\r\n    \r\n    \r\n    const agregaRam = ()   =>   {\r\n    ramService.agregaRam (Ram).\r\n    then(data => {setRam(data);\r\n    ramSuccess('success',t('Ram:cabecero.exito'),t('Ram:mensaje.agregar'));\r\n    setDlgRam(false);\r\n    obtenerRam ();\r\n    });\r\n    };\r\n    \r\n    const eliminaRam = ()   =>   {\r\n    Ram.eliminaRam (Ram);\r\n    ramSuccess('success',t('Ram:cabecero.exito'),t('Ram:mensaje.eliminar'));\r\n    setDlgRam(false);\r\n    obtenerRam();\r\n    obtenerRam();\r\n    };\r\n    \r\n    const actualizaRam = ()   =>   {\r\n    ramService.actualizaRam(Ram).\r\n    then(data => { setDlgRam(false); obtenerRam();});\r\n    };\r\n    \r\n    const updateProperty = (propiedad, valor)   =>  {\r\n    let ramCopy = Object.assign({}, Ram);\r\n    ramCopy[propiedad] = valor;\r\n    setRam(ramCopy);\r\n    };\r\n    \r\n    const iniciaRam = ()   =>   {\r\n    setCaptura(true);\r\n    iniciaComponentes();\r\n    setDlgRam(true);\r\n    };\r\n    \r\n    const iniciaComponentes = ()   =>   {\r\n    setRam({idRam:null\r\n       ,tipoRam:''\r\n       ,capacidadRam:''\r\n    });\r\n    formik.resetForm();\r\n    };\r\n    \r\n    /**\r\n    * Validaci√≥n de las propiedades \r\n    *\r\n    */\r\n    const validate = () => {\r\n    const errors = {};\r\n     if (!Ram.tipoRam) {\r\n    errors.txtTipoRam= t('Ram:required.tipoRam');\r\n    }\r\n    return errors;\r\n    };\r\n    \r\n    const formik = useFormik({\r\n    initialValues: {} ,\r\n    validate,\r\n    onSubmit: () => {\r\n    if(captura){\r\n    agregaRam();\r\n    } else{\r\n    actualizaRam();\r\n    }\r\n    },\r\n    });\r\n    \r\n    const fechaTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Moment format={t('formato.fechaHora')}>\r\n          {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n          \r\n       </Moment>\r\n    </div>);      \r\n    }\r\n    \r\n    \r\n    const actionTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div><Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-rounded\" onClick={()  =>  {seleccionaRam(rowData);} }></Button><Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaRam(rowData); } }></Button></div>);\r\n    }\r\n    \r\n    \r\n    \r\n    const rightFooter = (\r\n    \r\n    <div className=\"p-grid p-fluid\">\r\n       <div className=\"p-col-12\">\r\n          <div className=\"p-inputgroup\"><Button tooltip={t('Ram:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgRam(false) }></Button>                 \r\n             { !captura   &&  <Button tooltip={t('Ram:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaRam }></Button>}                 \r\n             { !captura   &&  <Button tooltip={t('Ram:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             { captura   &&  <Button tooltip={t('Ram:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             \r\n          </div>\r\n       </div>\r\n    </div>    \r\n    );\r\n    \r\n    const dlgFooter = \r\n    <Toolbar right={rightFooter}></Toolbar>;                 \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n    \r\n    <div>\r\n       <h1>\r\n          <Trans i18nKey=\"Ram:entidad\"></Trans>\r\n       </h1>\r\n       <div className=\"p-grid p-fluid\">\r\n          <div className=\"p-col-12 p-md-12\">\r\n             <div className=\"p-inputgroup\">\r\n                <InputText placeholder={t('Ram:placeholder.tipoRam')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Ram:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaRam}></Button></div>\r\n          </div>\r\n       </div>\r\n       <DataTable value={lstRam} paginator={true} rows={10} responsive={true}>\r\n          <Column field=\"idRam\" header={t('Ram:label.idRam')} sortable={true}></Column>\r\n          <Column field=\"tipoRam\" header={t('Ram:label.tipoRam')} sortable={true}></Column>\r\n          <Column field=\"capacidadRam\" header={t('Ram:label.capacidadRam')} sortable={true}></Column>\r\n          <Column body={actionTemplate} header={t('Ram:rotulo.editar')}></Column>\r\n       </DataTable>\r\n       <Dialog header={t('Ram:rotulo.agregar')} footer={dlgFooter} visible={dlgRam} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgRam(false)} blockScroll={false}>\r\n          { Ram  &&  \r\n          <div>\r\n             <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtTipoRam\">\r\n                      {t('Ram:label.tipoRam')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText id=\"txtTipoRam\" placeholder={t('Ram:placeholder.tipoRam')} value={Ram.tipoRam} className={formik.errors.txtTipoRam ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('tipoRam', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtTipoRam\">ram.tipoRam</label>)}\r\n                   \r\n                   {formik.errors.txtTipoRam &&  <small id=\"txtTipoRam-help\" className=\"p-invalid\">\r\n                      {formik.errors.txtTipoRam}\r\n                      </small>}                 \r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtCapacidadRam\">\r\n                      {t('Ram:label.capacidadRam')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputNumber  id=\"txtCapacidadRam\" placeholer={t('Ram:placeholder.capacidadRam')} value={Ram.capacidadRam} className={formik.errors.txtCapacidadRam ? 'p-invalid':'p-inputtext'}  /*onChange={(e) =>   updateProperty('capacidadDisco', e.target.value)}*/></InputNumber>    \r\n                   ):(     <label id=\"txtCapacidadRam\">ram.capacidadRam</label>)}\r\n                   \r\n                </div>\r\n                    \r\n             </div>\r\n          </div>\r\n          \r\n          }\r\n          \r\n       </Dialog>\r\n    </div>\r\n    );\r\n    \r\n    \r\n    \r\n    }                \r\n    export default Ram;                                        \t\r\n    \r\n    \r\n    "]},"metadata":{},"sourceType":"module"}